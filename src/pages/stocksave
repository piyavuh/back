import React, { Component } from "react";
import AuthContext from "../context/auth-context";
import Modal from "../components/Modal/Modal";
import StockList from "../components/Stocks/StockList/StockList";
import Backdrop from "../components/backdrop/backdrop/backdrop";
import "./Stock.css";


class StocksPage extends Component {
  state = {
    creating: false,
    stocks: []
  };

  static contextType = AuthContext;

  constructor(props) {
    super(props);
    this.valueElRef = React.createRef();
    this.dateElRef = React.createRef();
  }

  componentDidMount() {
    this.fetchStocks();
  }

  startCreateStockHandler = () => {
    this.setState({ creating: true });
  };

  modalConfirmHandler = () => {
    this.setState({ creating: false });
    const value = +this.valueElRef.current.value;
    const date = this.dateElRef.current.value;

    if (
      value <= 0 ||
      date.trim().length === 0 
    ) {
      return;
    }

    const stock = {value, date };
    console.log(stock);

    const requestBody = {
      query: `
          mutation {
            createStock(stockInput: { value: ${value}, date: "${date}"}) {
              _id
              date
              value
             
            }
          }
        `
    };

    const token = this.context.token;

    fetch('http://localhost:8000/graphql', {
      method: 'POST',
      body: JSON.stringify(requestBody),
      headers: {
        'Content-Type': 'application/json',
        Authorization: 'Bearer ' + token
      }
    })
      .then(res => {
        if (res.status !== 200 && res.status !== 201) {
          throw new Error('Failed!');
        }
        return res.json();
      })
      .then(resData => {
        console.log(resData);
        this.fetchStocks();
      })
      .catch(err => {
        console.log(err);
      });
  };

  modalCancelHandler = () => {
    this.setState({ creating: false });
  };

  fetchStocks() {
    const requestBody = {
      query: `
          query {
            stocks {
              _id
              date
              value
             
            }
          }
        `
    };

    fetch('http://localhost:8000/graphql', {
      method: 'POST',
      body: JSON.stringify(requestBody),
      headers: {
        'Content-Type': 'application/json'
      }
    })
      .then(res => {
        if (res.status !== 200 && res.status !== 201) {
          throw new Error('Failed!');
        }
        return res.json();
      })
      .then(resData => {
        const stocks = resData.data.stocks;
        this.setState({ stocks: stocks });
      })
      .catch(err => {
        console.log(err);
      });
  }

  render() {
    return (
      <React.Fragment>
        {this.state.creating && <Backdrop />}
        {this.state.creating && (
          <Modal
            title="Add Stock"
            canCancel
            canConfirm
            onCancel={this.modalCancelHandler}
            onConfirm={this.modalConfirmHandler}
          >
            <form>
              <div className="form-control">
                <label htmlFor="value">value</label>
                <input type="number" id="value" ref={this.valueElRef} />
              </div>
              <div className="form-control">
                <label htmlFor="date">Date</label>
                <input type="datetime-local" id="date" ref={this.dateElRef} />
              </div>
            </form>
          </Modal>
        )}
        {this.context.token && (
          <div className="stocks-control">
            <p>Share your own Stocks!</p>
            <button className="btn" onClick={this.startCreateStockHandler}>
              Create Stock
            </button>
          </div>
        )}
        <StockList stocks={this.state.stocks}/>
      </React.Fragment>
    );
  }
}

export default StocksPage;