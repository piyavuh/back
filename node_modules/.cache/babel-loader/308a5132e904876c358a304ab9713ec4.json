{"ast":null,"code":"var _jsxFileName = \"D:\\\\summer\\\\Farm\\\\frontend\\\\src\\\\pages\\\\Stock.js\";\nimport React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/backdrop/backdrop/backdrop\";\nimport \"./Stock.css\";\n\nclass StocksPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false,\n      stocks: []\n    };\n\n    this.startCreateStockHandler = () => {\n      this.setState({\n        creating: true\n      });\n    };\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const value = +this.valueElRef.current.value;\n      const date = this.dateElRef.current.value;\n\n      if (value <= 0 || date.trim().length === 0) {\n        return;\n      }\n\n      const stock = {\n        value,\n        date\n      };\n      console.log(stock);\n      const requestBody = {\n        query: `\n          mutation {\n            createStock(stockInput: { value: ${value}, date: \"${date}\"}) {\n              _id\n              date\n              value\n             \n            }\n          }\n        `\n      };\n      const token = this.context.token;\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        this.fetchStocks();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false\n      });\n    };\n\n    this.valueElRef = React.createRef();\n    this.dateElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchStocks();\n  }\n\n  fetchStocks() {\n    const requestBody = {\n      query: `\n          query {\n            stocks {\n              _id\n              date\n              value\n             \n            }\n          }\n        `\n    };\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const stocks = resData.data.stocks;\n      this.setState({\n        stocks: stocks\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const stockList = this.state.stocks.map(stock => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: stock._id,\n        className: \"stocks__list-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, stock.value, stock.date);\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, this.state.creating && /*#__PURE__*/React.createElement(Backdrop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }), this.state.creating && /*#__PURE__*/React.createElement(Modal, {\n      title: \"Add Stock\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"value\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"value\",\n      ref: this.valueElRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dateElRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })))), this.context.token && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stocks-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"Share your own Stocks!\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.startCreateStockHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Create Stock\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"stocks__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, stockList));\n  }\n\n}\n\nStocksPage.contextType = AuthContext;\nexport default StocksPage;","map":{"version":3,"sources":["D:/summer/Farm/frontend/src/pages/Stock.js"],"names":["React","Component","AuthContext","Modal","Backdrop","StocksPage","constructor","props","state","creating","stocks","startCreateStockHandler","setState","modalConfirmHandler","value","valueElRef","current","date","dateElRef","trim","length","stock","console","log","requestBody","query","token","context","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","fetchStocks","catch","err","modalCancelHandler","createRef","componentDidMount","data","render","stockList","map","_id","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport Backdrop from \"../components/backdrop/backdrop/backdrop\";\r\nimport \"./Stock.css\";\r\n\r\nclass StocksPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    stocks: []\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.valueElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchStocks();\r\n  }\r\n\r\n  startCreateStockHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n    const value = +this.valueElRef.current.value;\r\n    const date = this.dateElRef.current.value;\r\n\r\n    if (\r\n      value <= 0 ||\r\n      date.trim().length === 0 \r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const stock = {value, date };\r\n    console.log(stock);\r\n\r\n    const requestBody = {\r\n      query: `\r\n          mutation {\r\n            createStock(stockInput: { value: ${value}, date: \"${date}\"}) {\r\n              _id\r\n              date\r\n              value\r\n             \r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        console.log(resData);\r\n        this.fetchStocks();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false });\r\n  };\r\n\r\n  fetchStocks() {\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            stocks {\r\n              _id\r\n              date\r\n              value\r\n             \r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const stocks = resData.data.stocks;\r\n        this.setState({ stocks: stocks });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const stockList = this.state.stocks.map(stock => {\r\n      return (\r\n        <li key={stock._id} className=\"stocks__list-item\">\r\n          {stock.value}\r\n          {stock.date}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.creating && <Backdrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Stock\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"value\">value</label>\r\n                <input type=\"number\" id=\"value\" ref={this.valueElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"stocks-control\">\r\n            <p>Share your own Stocks!</p>\r\n            <button className=\"btn\" onClick={this.startCreateStockHandler}>\r\n              Create Stock\r\n            </button>\r\n          </div>\r\n        )}\r\n        <ul className=\"stocks__list\">{stockList}</ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StocksPage;"]},"metadata":{},"sourceType":"module"}