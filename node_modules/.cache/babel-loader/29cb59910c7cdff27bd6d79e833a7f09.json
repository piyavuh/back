{"ast":null,"code":"var _jsxFileName = \"D:\\\\summer\\\\frontend-master\\\\src\\\\component\\\\containers\\\\General-product\\\\FoodCow\\\\FoodCowCredit\\\\Table_foodcowcredit.js\";\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport './foodcowcredit.css';\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  const [form] = Form.useForm();\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EditableContext.Provider, {\n    value: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }))));\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef();\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async e => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/React.createElement(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `กรุณากรอก${title} `\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      ref: inputRef,\n      onPressEnter: save,\n      onBlur: save,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }), childNode);\n};\n\nclass Tablemedicinecowcash extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        count,\n        dataSource\n      } = this.state;\n      const newData = {\n        key: count,\n        no_cow: `${count}`,\n        code_foodcow: `CH1820`,\n        name_foodcow: `อาหารข้น`,\n        amount_foodcow: `10`,\n        unitfoodcow: 'กิโลกรัม',\n        price_per_unitfoodcow: '350',\n        total_buyfoodcow_cash: '3,500'\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: 'ลำดับที่',\n      dataIndex: 'no_cow',\n      width: '8%',\n      editable: false\n    }, {\n      title: 'รหัสอาหารโค',\n      width: '14%',\n      dataIndex: 'code_foodcow',\n      editable: true,\n      message: 'กรุณากรอก'\n    }, {\n      title: 'ชื่ออาหารโค',\n      width: '20%',\n      dataIndex: 'name_foodcow',\n      editable: true\n    }, {\n      title: 'จำนวน',\n      width: '14%',\n      dataIndex: 'amount_foodcow',\n      editable: true\n    }, {\n      title: 'หน่วย',\n      width: '10%',\n      dataIndex: 'unitfoodcow',\n      editable: true\n    }, {\n      title: 'ราคา/หน่วย',\n      width: '10%',\n      dataIndex: 'price_per_unitfoodcow',\n      editable: true\n    }, {\n      title: 'เป็นเงิน(บาท)',\n      width: '10%',\n      dataIndex: 'total_buyfoodcow_cash',\n      editable: true\n    }, {\n      title: 'ลบ',\n      width: '10%',\n      dataIndex: 'operation',\n      render: (text, record) => this.state.dataSource.length >= 1 ? /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"\\u0E04\\u0E38\\u0E13\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23\\u0E25\\u0E1A\",\n        onConfirm: () => this.handleDelete(record.key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          backgroundColor: '#ff3333',\n          border: '#ff3333',\n          borderRadius: '0.25em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        style: {\n          color: 'white'\n        },\n        icon: faTrashAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 12\n        }\n      }))) : null\n    }];\n    this.state = {\n      dataSource: [],\n      count: 1\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '30px 60px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleAdd,\n      type: \"primary\",\n      style: {\n        marginBottom: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\"), /*#__PURE__*/React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '20px',\n        paddingBottom: '10px',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"list_sellcowfatten\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        marginRight: '60px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 10\n      }\n    }, \"\\u0E23\\u0E27\\u0E21\"), /*#__PURE__*/React.createElement(Input, {\n      style: {\n        width: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        marginLeft: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 10\n      }\n    }, \"\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\")), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"totalmoney_sellcowfatten\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        marginRight: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 8\n      }\n    }, \"\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E40\\u0E07\\u0E34\\u0E19\"), /*#__PURE__*/React.createElement(Input, {\n      style: {\n        width: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        marginLeft: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 8\n      }\n    }, \"\\u0E1A\\u0E32\\u0E17\"))));\n  }\n\n}\n\nexport default Tablemedicinecowcash;","map":{"version":3,"sources":["D:/summer/frontend-master/src/component/containers/General-product/FoodCow/FoodCowCredit/Table_foodcowcredit.js"],"names":["React","useContext","useState","useEffect","useRef","faTrashAlt","FontAwesomeIcon","Table","Input","Button","Popconfirm","Form","EditableContext","createContext","EditableRow","index","props","form","useForm","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","e","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","Tablemedicinecowcash","Component","constructor","handleDelete","key","dataSource","state","setState","filter","item","handleAdd","count","newData","no_cow","code_foodcow","name_foodcow","amount_foodcow","unitfoodcow","price_per_unitfoodcow","total_buyfoodcow_cash","row","findIndex","splice","columns","width","render","text","length","backgroundColor","border","borderRadius","color","components","body","cell","map","col","onCell","marginBottom","paddingTop","paddingBottom","textAlign","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport './foodcowcredit.css';\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef();\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async e => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `กรุณากรอก${title} `,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{\n          paddingRight: 24,\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nclass Tablemedicinecowcash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'ลำดับที่',\n        dataIndex: 'no_cow',\n        width:'8%',\n        editable: false,\n      },\n      {\n        title: 'รหัสอาหารโค',\n        width:'14%',\n        dataIndex: 'code_foodcow',\n        editable: true,\n        message:'กรุณากรอก',\n        \n      },\n      {\n        title: 'ชื่ออาหารโค',\n        width:'20%',\n        dataIndex: 'name_foodcow',\n        editable: true,\n      },\n      {\n        title: 'จำนวน',\n        width:'14%',\n        dataIndex: 'amount_foodcow',\n        editable: true,\n      },\n      {\n        title: 'หน่วย',\n        width:'10%',\n        dataIndex: 'unitfoodcow',\n        editable: true,\n        \n      },\n      {\n        title: 'ราคา/หน่วย',\n        width:'10%',\n        dataIndex: 'price_per_unitfoodcow',\n        editable: true,\n        \n      },\n      {\n        title: 'เป็นเงิน(บาท)',\n        width:'10%',\n        dataIndex: 'total_buyfoodcow_cash',\n        editable: true,\n      },\n\n      {\n        title: 'ลบ',\n        width:'10%',\n        dataIndex: 'operation',\n        render: (text, record) =>\n          this.state.dataSource.length >= 1 ? (\n            <Popconfirm title=\"คุณต้องการลบ\" onConfirm={() => this.handleDelete(record.key)}>\n              <Button style={{backgroundColor:'#ff3333',border:'#ff3333',borderRadius: '0.25em'}}>\n           <FontAwesomeIcon style={{color:'white'}} icon={faTrashAlt} />\n           </Button>\n            </Popconfirm>\n          ) : null,\n      },\n    ];\n    this.state = {\n      dataSource: [\n       \n       \n      ],\n      count: 1,\n    };\n  }\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({\n      dataSource: dataSource.filter(item => item.key !== key),\n    });\n  };\n\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      no_cow: `${count}`,\n      code_foodcow:`CH1820`,\n      name_foodcow:`อาหารข้น`,\n      amount_foodcow:`10`,\n      unitfoodcow:'กิโลกรัม', \n      price_per_unitfoodcow:'350',\n      total_buyfoodcow_cash:'3,500',\n     \n\n      \n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1,\n    });\n  };\n\n  handleSave = row => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    this.setState({\n      dataSource: newData,\n    });\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    return (\n      <div style={{margin:'30px 60px'}}>\n        <Button\n          onClick={this.handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          เพิ่มรายการ\n        </Button>\n        <Table \n          components={components}\n          rowClassName={() => 'editable-row'}\n          bordered\n          dataSource={dataSource}\n          columns={columns}\n        />\n         <div style={{paddingTop:'20px',paddingBottom:'10px',textAlign:'center'}}>\n          \n          <Form.Item \n           name=\"list_sellcowfatten\" \n           >\n         <label  style={{marginRight:'60px'}}>รวม</label>\n       <Input style={{width:'10%'}}/>\n         <label style={{marginLeft:'40px'}}>รายการ</label>\n       </Form.Item>\n       <Form.Item \n\n       name=\"totalmoney_sellcowfatten\" \n     \n       >\n       <label  style={{marginRight:'40px'}}>เป็นเงิน</label>\n       <Input style={{width:'10%'}}/>\n       <label style={{marginLeft:'40px'}}>บาท</label>\n       </Form.Item>\n\n     \n       </div>\n      </div>\n    );\n  }\n}\n\nexport default Tablemedicinecowcash;"]},"metadata":{},"sourceType":"module"}