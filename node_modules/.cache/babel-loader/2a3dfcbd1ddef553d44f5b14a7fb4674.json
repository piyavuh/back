{"ast":null,"code":"var _jsxFileName = \"D:\\\\summer\\\\Farm\\\\frontend\\\\src\\\\pages\\\\Members\\\\Login.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const id = this.idEl.current.value;\n      const password = this.passwordEl.current.value;\n\n      if (id.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: `\n        query {\n          login(id: \"${id}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `\n      };\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.idEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"id\",\n      ref: this.idEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["D:/summer/Farm/frontend/src/pages/Members/Login.js"],"names":["React","Component","LoginPage","constructor","props","state","isLogin","submitHandler","event","preventDefault","id","idEl","current","value","password","passwordEl","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","console","log","catch","err","createRef","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Login.css';\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    isLogin: true\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.idEl = React.createRef();\r\n    this.passwordEl = React.createRef();\r\n  }\r\n\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const id = this.idEl.current.value;\r\n    const password = this.passwordEl.current.value;\r\n\r\n    if (id.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query {\r\n          login(id: \"${id}\", password: \"${password}\") {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `\r\n    };\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        console.log(resData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"id\">ID</label>\r\n          <input id=\"id\" ref={this.idEl} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}