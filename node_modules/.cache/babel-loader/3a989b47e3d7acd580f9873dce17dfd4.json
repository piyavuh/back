{"ast":null,"code":"var _jsxFileName = \"D:\\\\summer\\\\Farm\\\\frontend\\\\src\\\\pages\\\\Members\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport \"../Members/Login.css\";\nimport AuthContext from \"../../context/auth-context\";\n\nclass AuthPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMember: true\n    };\n\n    this.switchModeHandler = () => {\n      this.setState(prevState => {\n        return {\n          isMember: !prevState.isMember\n        };\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const Username = this.UsernameEl.current.value;\n      const Password = this.PasswordEl.current.value;\n\n      if (Username.trim().length === 0 || Password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: `\n        query {\n          login(Username: \"${Username}\", Password: \"${Password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n        \n      `\n      };\n\n      if (!this.state.isMember) {\n        requestBody = {\n          query: `\n        query {\n          login_off(id: \"${id}\", Password: \"${Password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n        `\n        };\n      }\n\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        if (this.state.isMember) {\n          if (resData.data.login.token) {\n            this.context.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\n          }\n        } else if (!this.state.isMember) {\n          if (resData.data.login_off.token) {\n            this.context.login_off(resData.data.login_off.token, resData.data.login_off.userId, resData.data.login_off.tokenExpiration);\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.UsernameEl = React.createRef();\n    this.PasswordEl = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Username\",\n      id: \"Username\",\n      ref: this.UsernameEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Password\",\n      id: \"Password\",\n      ref: this.PasswordEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.switchModeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Switch to \", this.state.isMember ? 'Officer' : 'Member')));\n  }\n\n}\n\nAuthPage.contextType = AuthContext;\nexport default AuthPage;","map":{"version":3,"sources":["D:/summer/Farm/frontend/src/pages/Members/Login.js"],"names":["React","Component","AuthContext","AuthPage","constructor","props","state","isMember","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","Username","UsernameEl","current","value","Password","PasswordEl","trim","length","requestBody","query","id","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","context","userId","tokenExpiration","login_off","catch","err","console","log","createRef","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"../Members/Login.css\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nclass AuthPage extends Component {\r\n  state = {\r\n    isMember: true\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.UsernameEl = React.createRef();\r\n    this.PasswordEl = React.createRef();\r\n  }\r\n  switchModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return { isMember: !prevState.isMember };\r\n    });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const Username = this.UsernameEl.current.value;\r\n    const Password = this.PasswordEl.current.value;\r\n\r\n    if (Username.trim().length === 0 || Password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query {\r\n          login(Username: \"${Username}\", Password: \"${Password}\") {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n        \r\n      `,\r\n    };\r\n\r\n    if (!this.state.isMember) {\r\n      requestBody = {\r\n        query: `\r\n        query {\r\n          login_off(id: \"${id}\", Password: \"${Password}\") {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n        `\r\n      };\r\n    }\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        \r\n        throw new Error('Failed!');\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(resData => {\r\n      if (this.state.isMember) {\r\n        if (resData.data.login.token) {\r\n          this.context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          );\r\n        }\r\n      }\r\n      \r\n      else if (!this.state.isMember) {\r\n        if(resData.data.login_off.token) {\r\n          this.context.login_off(\r\n            resData.data.login_off.token,\r\n            resData.data.login_off.userId,\r\n            resData.data.login_off.tokenExpiration\r\n          );\r\n        }\r\n      }\r\n      \r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n};\r\n  render() {\r\n    return (\r\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"Username\">Username</label>\r\n          <input type=\"Username\" id=\"Username\" ref={this.UsernameEl} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"Password\">Password</label>\r\n          <input type=\"Password\" id=\"Password\" ref={this.PasswordEl} />\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={this.switchModeHandler}>\r\n            Switch to {this.state.isMember ? 'Officer' : 'Member'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthPage;\r\n"]},"metadata":{},"sourceType":"module"}