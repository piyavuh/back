{"ast":null,"code":"var _jsxFileName = \"D:\\\\summer\\\\Farm\\\\frontend\\\\src\\\\pages\\\\Stock.js\";\nimport React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/backdrop/backdrop/backdrop\";\nimport \"./Stock.css\";\n\nclass StockPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false,\n      stocks: []\n    };\n\n    this.startCreateEventHandler = () => {\n      this.setState({\n        creating: true\n      });\n    };\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const value = +this.valueElRef.current.value;\n      const date = this.dateElRef.current.value;\n\n      if (value <= 0 || date.trim().length === 0) {\n        return;\n      }\n\n      const stock = {\n        value,\n        date\n      };\n      console.log(stock);\n      const requestBody = {\n        query: `\n        mutation {\n          createStock(stockInput: {value:${value} , date: \"${date}\"}) {\n            _id\n            value\n            date\n            owner{\n              _id\n              Username\n            }\n          }\n        }\n        \n        `\n      };\n      const token = this.context.token;\n      fetch(\"http://localhost:8000/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer\" + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n\n        return res.json();\n      }).then(resData => {\n        this.fetchStocks();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false\n      });\n    };\n\n    this.valueElRef = React.createRef();\n    this.dateElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  fetchEvents() {\n    const requestBody = {\n      query: `\n      query {\n        stocks {\n          _id\n          value\n          date\n          owner{\n            _id\n            Username\n          }\n        }\n      }\n      \n      `\n    };\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed!\");\n      }\n\n      return res.json();\n    }).then(resData => {\n      const stocks = resData.data.stocks;\n      this.setState({\n        stocks: stocks\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, this.state.creating && /*#__PURE__*/React.createElement(Backdrop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }), this.state.creating && /*#__PURE__*/React.createElement(Modal, {\n      title: \"Add Event\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"from\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \"Value\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"value\",\n      ref: this.valueElRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dateElRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    })))), this.context.token && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"events-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"Share your own Stock!\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.startCreateEventHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Create Event\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"events__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"events__list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \"Test\"), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"events__list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Test\")));\n  }\n\n}\n\nStockPage.contextType = AuthContext;\nexport default StockPage;","map":{"version":3,"sources":["D:/summer/Farm/frontend/src/pages/Stock.js"],"names":["React","Component","AuthContext","Modal","Backdrop","StockPage","constructor","props","state","creating","stocks","startCreateEventHandler","setState","modalConfirmHandler","value","valueElRef","current","date","dateElRef","trim","length","stock","console","log","requestBody","query","token","context","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","fetchStocks","catch","err","modalCancelHandler","createRef","componentDidMount","fetchEvents","data","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport Backdrop from \"../components/backdrop/backdrop/backdrop\";\r\nimport \"./Stock.css\";\r\n\r\nclass StockPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    stocks:[]\r\n  };\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.valueElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchEvents();\r\n  }\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n    const value = +this.valueElRef.current.value;\r\n    const date = this.dateElRef.current.value;\r\n\r\n    if (value <= 0 || date.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    const stock = { value, date };\r\n    console.log(stock);\r\n\r\n    const requestBody = {\r\n      query: `\r\n        mutation {\r\n          createStock(stockInput: {value:${value} , date: \"${date}\"}) {\r\n            _id\r\n            value\r\n            date\r\n            owner{\r\n              _id\r\n              Username\r\n            }\r\n          }\r\n        }\r\n        \r\n        `,\r\n    };\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer\" + token\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        this.fetchStocks();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false });\r\n  };\r\n  fetchEvents() {\r\n    const requestBody = {\r\n      query: `\r\n      query {\r\n        stocks {\r\n          _id\r\n          value\r\n          date\r\n          owner{\r\n            _id\r\n            Username\r\n          }\r\n        }\r\n      }\r\n      \r\n      `,\r\n    };\r\n\r\n  \r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const stocks = resData.data.stocks;\r\n        this.setState({ stocks: stocks });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.creating && <Backdrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Event\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n          >\r\n            <from>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"value\">Value</label>\r\n                <input type=\"text\" id=\"value\" ref={this.valueElRef} />\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  id=\"date\"\r\n                  ref={this.dateElRef}\r\n                ></input>\r\n              </div>\r\n            </from>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"events-control\">\r\n            <p>Share your own Stock!</p>\r\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n              Create Event\r\n            </button>\r\n          </div>\r\n        )}\r\n        <ul className=\"events__list\">\r\n          <li className=\"events__list-item\">Test</li>\r\n          <li className=\"events__list-item\">Test</li>\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockPage;\r\n"]},"metadata":{},"sourceType":"module"}